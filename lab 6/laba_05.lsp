(defun dispersion ()
  (let ((average 0) (sum 0))
  (cl-csv:do-csv (row #P"result_laba05.csv")
    (incf average (parse-integer (nth 1 row))))
  (setq average (/ average 50))
  (cl-csv:do-csv (row #P"result_laba05.csv")
    (let ((elem 0))
      (setq elem (parse-integer (nth 1 row)))
      (setq elem (- elem average))
      (setq elem (expt elem 2))
      (incf sum elem)))
  (setq sum (/ sum 50))
  (float sum)
  )
)

(defun mathexpect ()
  (let ((average 0))
    (cl-csv:do-csv (row #P"result_laba05.csv")
      (let ((sum 0))  
        (with-input-from-string (in (nth 3 row))
        (setq sum (read in))
        (incf average sum))
      )
    )
    (setq average (/ average 50))
    (float average)
  )
)